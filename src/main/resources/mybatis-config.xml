<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--以下已经在application.yml中配置过了-->
    <!--<typeAliases>-->
    <!--<package name="com.example.domain"/>-->
    <!--</typeAliases>-->
    <!--<mappers>-->
    <!--<mapper resource="mapper/UserMapper.xml"/>-->
    <!--</mappers>-->





    <!-- | 全局配置设置 | | 可配置选项 默认值, 描述 | | aggressiveLazyLoading true, 当设置为‘true’的时候，懒加载的对象可能被任何懒属性全部加载。否则，每个属性都按需加载。 | multipleResultSetsEnabled true, 允许和不允许单条语句返回多个数据集（取决于驱动需求）
      | useColumnLabel true, 使用列标签代替列名称。不同的驱动器有不同的作法。参考一下驱动器文档，或者用这两个不同的选项进行测试一下。 | useGeneratedKeys false, 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。
      | autoMappingBehavior PARTIAL, 指定MyBatis 是否并且如何来自动映射数据表字段与对象的属性。PARTIAL将只自动映射简单的，没有嵌套的结果。FULL 将自动映射所有复杂的结果。 | defaultExecutorType SIMPLE, 配置和设定执行器，SIMPLE
      执行器执行其它语句。REUSE 执行器可能重复使用prepared statements 语句，BATCH执行器可以重复执行语句和批量更新。 | defaultStatementTimeout null, 设置一个时限，以决定让驱动器等待数据库回应的多长时间为超时 | -->
    <settings>
        <!-- 下划线转驼峰 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- 这个配置使全局的映射器启用或禁用缓存 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 这个配置使Map空置也能映射 -->
        <setting name="callSettersOnNulls" value="true"/>
        <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载 -->
        <setting name="aggressiveLazyLoading" value="false"/>
        <!-- 允许或不允许多种结果集从一个单独的语句中返回（需要适合的驱动） -->
        <setting name="multipleResultSetsEnabled" value="true"/>
        <!-- 使用列标签代替列名。不同的驱动在这方便表现不同。参考驱动文档或充分测试两种方法来决定所使用的驱动 -->
        <setting name="useColumnLabel" value="true"/>
        <!-- 允许JDBC支持生成的键。需要适合的驱动。如果设置为true则这个设置强制生成的键被使用，尽管一些驱动拒绝兼容但仍然有效（比如Derby） -->
        <setting name="useGeneratedKeys" value="true"/>
        <!-- 指定MyBatis如何自动映射列到字段/属性。PARTIAL只会自动映射简单，没有嵌套的结果。FULL会自动映射任意复杂的结果（嵌套的或其他情况） -->
        <setting name="autoMappingBehavior" value="FULL"/>
        <!-- 配置默认的执行器。SIMPLE执行器没有什么特别之处。REUSE执行器重用预处理语句。BATCH执行器重用语句和批量更新;选择simple,由于spring事务支持的需要 -->
        <setting name="defaultExecutorType" value="REUSE"/>
        <!-- 设置超时时间，它决定驱动等待一个数据库响应的时间 -->
        <setting name="defaultStatementTimeout" value="25000"/>
        <!-- 打印查询语句 -->
        <!--        <setting name="logImpl" value="STDOUT_LOGGING" />-->
    </settings>


    <!--<typeAliases>-->
        <!--<package name="com.citycloud.store.entity"/>-->
        <!--<package name="com.citycloud.store.entity.dto"/>-->
    <!--</typeAliases>-->


    <!-- 插件配置 -->
    <!--<plugins>-->
        <!--&lt;!&ndash; | 分页插件配置 | 插件提供二种方言选择：1、默认方言 2、自定义方言实现类，两者均未配置则抛出异常！ | dialectType 数据库方言 | 默认支持 mysql oracle hsql sqlite postgre sqlserver | dialectClazz 方言实现类-->
            <!--| 自定义需要实现 com.citycloud.ccuap.framework.mybatis.pagination.IDialect 接口 | &ndash;&gt;-->
        <!--<plugin interceptor="com.citycloud.ccuap.framework.mybatis.pagination.PaginationInterceptor">-->
            <!--<property name="dialectType" value="mysql"/>-->
        <!--</plugin>-->
    <!--</plugins>-->




</configuration>
